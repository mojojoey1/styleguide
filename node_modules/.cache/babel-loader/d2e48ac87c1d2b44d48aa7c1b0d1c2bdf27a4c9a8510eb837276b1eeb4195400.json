{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopitt\\\\Documents\\\\code\\\\figmaTest2\\\\src\\\\components\\\\AvatarCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { getDesignTokens } from '../theme/tokens';\n\n// Types for the component props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getInitials = name => {\n  return name.split(' ').map(part => part[0]).join('').toUpperCase().slice(0, 2);\n};\nconst AvatarImage = ({\n  imageUrl,\n  initials,\n  name,\n  isDarkMode = false\n}) => {\n  const designTokens = getDesignTokens(isDarkMode);\n  const displayInitials = initials || getInitials(name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '56px',\n      height: '56px',\n      backgroundColor: designTokens.colors.avatarBackground,\n      borderRadius: designTokens.borderRadius.medium,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: designTokens.colors.avatarForeground,\n      overflow: 'hidden',\n      transition: 'all 0.3s ease'\n    },\n    role: \"img\",\n    \"aria-label\": `Avatar for ${name}`,\n    children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: `${name}'s avatar`,\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        ...designTokens.typography.body1Strong,\n        fontSize: '20px'\n      },\n      children: displayInitials\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = AvatarImage;\nexport const AvatarCard = ({\n  name,\n  title,\n  imageUrl,\n  initials,\n  role = 'IC',\n  className = '',\n  isDarkMode = false,\n  isSelected = false\n}) => {\n  _s();\n  const designTokens = getDesignTokens(isDarkMode);\n  const isManager = role === 'Manager';\n  const getBackgroundColor = () => {\n    if (isManager) {\n      return isSelected ? designTokens.colors.brandBackgroundSelected : designTokens.colors.brandBackgroundRest;\n    } else {\n      return isSelected ? designTokens.colors.neutralBackground2Selected : designTokens.colors.neutralBackground2Rest;\n    }\n  };\n\n  // Create a style tag for the pressed state styles\n  React.useEffect(() => {\n    const styleId = 'avatar-card-styles';\n    let styleTag = document.getElementById(styleId);\n    if (!styleTag) {\n      styleTag = document.createElement('style');\n      styleTag.id = styleId;\n      document.head.appendChild(styleTag);\n    }\n    const pressedStyles = `\n      .avatar-card-manager:active {\n        background-color: ${designTokens.colors.brandBackgroundPressed} !important;\n      }\n      .avatar-card-regular:active {\n        background-color: ${designTokens.colors.neutralBackground2Pressed} !important;\n      }\n    `;\n    styleTag.textContent = pressedStyles;\n    return () => {\n      if (styleTag && styleTag.parentNode) {\n        styleTag.parentNode.removeChild(styleTag);\n      }\n    };\n  }, [isDarkMode]); // Re-run when dark mode changes\n\n  const cardClassName = `${className} ${isManager ? 'avatar-card-manager' : 'avatar-card-regular'}`.trim();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cardClassName,\n    style: {\n      position: 'relative',\n      backgroundColor: getBackgroundColor(),\n      borderRadius: designTokens.borderRadius.large,\n      boxShadow: designTokens.shadows.card,\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      overflow: 'visible',\n      width: '100%',\n      minWidth: '240px',\n      maxWidth: '248px',\n      transition: 'all 0.2s ease',\n      transform: isSelected ? 'scale(1.02)' : 'scale(1)',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: designTokens.spacing.xxs\n      },\n      children: /*#__PURE__*/_jsxDEV(AvatarImage, {\n        imageUrl: imageUrl,\n        initials: initials,\n        name: name,\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: designTokens.spacing.xs,\n        minWidth: 0,\n        flex: 1,\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...designTokens.typography.body1Strong,\n          color: isManager ? designTokens.colors.neutralForegroundInvertedRest : designTokens.colors.neutralForeground1Rest,\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          transition: 'color 0.3s ease',\n          width: '100%'\n        },\n        title: name,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), title && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...designTokens.typography.body1,\n          color: isManager ? designTokens.colors.neutralForegroundInvertedRest : designTokens.colors.neutralForeground1Rest,\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          transition: 'color 0.3s ease',\n          width: '100%'\n        },\n        title: title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(AvatarCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = AvatarCard;\nexport default AvatarCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"AvatarImage\");\n$RefreshReg$(_c2, \"AvatarCard\");","map":{"version":3,"names":["React","getDesignTokens","jsxDEV","_jsxDEV","getInitials","name","split","map","part","join","toUpperCase","slice","AvatarImage","imageUrl","initials","isDarkMode","designTokens","displayInitials","style","width","height","backgroundColor","colors","avatarBackground","borderRadius","medium","display","alignItems","justifyContent","color","avatarForeground","overflow","transition","role","children","src","alt","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","typography","body1Strong","fontSize","_c","AvatarCard","title","className","isSelected","_s","isManager","getBackgroundColor","brandBackgroundSelected","brandBackgroundRest","neutralBackground2Selected","neutralBackground2Rest","useEffect","styleId","styleTag","document","getElementById","createElement","id","head","appendChild","pressedStyles","brandBackgroundPressed","neutralBackground2Pressed","textContent","parentNode","removeChild","cardClassName","trim","position","large","boxShadow","shadows","card","flexDirection","minWidth","maxWidth","transform","cursor","padding","spacing","xxs","xs","flex","neutralForegroundInvertedRest","neutralForeground1Rest","whiteSpace","textOverflow","body1","_c2","$RefreshReg$"],"sources":["C:/Users/jopitt/Documents/code/figmaTest2/src/components/AvatarCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { getDesignTokens } from '../theme/tokens';\r\n\r\n// Types for the component props\r\nexport interface AvatarCardProps {\r\n  name: string;\r\n  title?: string;\r\n  imageUrl?: string;\r\n  initials?: string;\r\n  role?: 'Manager' | 'IC';\r\n  className?: string;\r\n  isDarkMode?: boolean;\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst getInitials = (name: string): string => {\r\n  return name\r\n    .split(' ')\r\n    .map(part => part[0])\r\n    .join('')\r\n    .toUpperCase()\r\n    .slice(0, 2);\r\n};\r\n\r\nconst AvatarImage: React.FC<{\r\n  imageUrl?: string;\r\n  initials?: string;\r\n  name: string;\r\n  isDarkMode?: boolean;\r\n}> = ({ imageUrl, initials, name, isDarkMode = false }) => {\r\n  const designTokens = getDesignTokens(isDarkMode);\r\n  const displayInitials = initials || getInitials(name);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '56px',\r\n        height: '56px',\r\n        backgroundColor: designTokens.colors.avatarBackground,\r\n        borderRadius: designTokens.borderRadius.medium,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: designTokens.colors.avatarForeground,\r\n        overflow: 'hidden',\r\n        transition: 'all 0.3s ease',\r\n      }}\r\n      role=\"img\"\r\n      aria-label={`Avatar for ${name}`}\r\n    >\r\n      {imageUrl ? (\r\n        <img\r\n          src={imageUrl}\r\n          alt={`${name}'s avatar`}\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            objectFit: 'cover',\r\n          }}\r\n        />\r\n      ) : (\r\n        <span style={{\r\n          ...designTokens.typography.body1Strong,\r\n          fontSize: '20px',\r\n        }}>\r\n          {displayInitials}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AvatarCard: React.FC<AvatarCardProps> = ({\r\n  name,\r\n  title,\r\n  imageUrl,\r\n  initials,\r\n  role = 'IC',\r\n  className = '',\r\n  isDarkMode = false,\r\n  isSelected = false,\r\n}) => {\r\n  const designTokens = getDesignTokens(isDarkMode);\r\n  const isManager = role === 'Manager';\r\n\r\n  const getBackgroundColor = () => {\r\n    if (isManager) {\r\n      return isSelected ? designTokens.colors.brandBackgroundSelected : designTokens.colors.brandBackgroundRest;\r\n    } else {\r\n      return isSelected ? designTokens.colors.neutralBackground2Selected : designTokens.colors.neutralBackground2Rest;\r\n    }\r\n  };\r\n\r\n  // Create a style tag for the pressed state styles\r\n  React.useEffect(() => {\r\n    const styleId = 'avatar-card-styles';\r\n    let styleTag = document.getElementById(styleId) as HTMLStyleElement;\r\n    \r\n    if (!styleTag) {\r\n      styleTag = document.createElement('style');\r\n      styleTag.id = styleId;\r\n      document.head.appendChild(styleTag);\r\n    }\r\n\r\n    const pressedStyles = `\r\n      .avatar-card-manager:active {\r\n        background-color: ${designTokens.colors.brandBackgroundPressed} !important;\r\n      }\r\n      .avatar-card-regular:active {\r\n        background-color: ${designTokens.colors.neutralBackground2Pressed} !important;\r\n      }\r\n    `;\r\n\r\n    styleTag.textContent = pressedStyles;\r\n\r\n    return () => {\r\n      if (styleTag && styleTag.parentNode) {\r\n        styleTag.parentNode.removeChild(styleTag);\r\n      }\r\n    };\r\n  }, [isDarkMode]); // Re-run when dark mode changes\r\n\r\n  const cardClassName = `${className} ${isManager ? 'avatar-card-manager' : 'avatar-card-regular'}`.trim();\r\n\r\n  return (\r\n    <div\r\n      className={cardClassName}\r\n      style={{\r\n        position: 'relative',\r\n        backgroundColor: getBackgroundColor(),\r\n        borderRadius: designTokens.borderRadius.large,\r\n        boxShadow: designTokens.shadows.card,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        overflow: 'visible',\r\n        width: '100%',\r\n        minWidth: '240px',\r\n        maxWidth: '248px',\r\n        transition: 'all 0.2s ease',\r\n        transform: isSelected ? 'scale(1.02)' : 'scale(1)',\r\n        cursor: 'pointer',\r\n      }}\r\n    >\r\n      <div style={{ padding: designTokens.spacing.xxs }}>\r\n        <AvatarImage\r\n          imageUrl={imageUrl}\r\n          initials={initials}\r\n          name={name}\r\n          isDarkMode={isDarkMode}\r\n        />\r\n      </div>\r\n      \r\n      <div style={{\r\n        padding: designTokens.spacing.xs,\r\n        minWidth: 0,\r\n        flex: 1,\r\n        overflow: 'hidden'\r\n      }}>\r\n        <div\r\n          style={{\r\n            ...designTokens.typography.body1Strong,\r\n            color: isManager\r\n              ? designTokens.colors.neutralForegroundInvertedRest\r\n              : designTokens.colors.neutralForeground1Rest,\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            transition: 'color 0.3s ease',\r\n            width: '100%',\r\n          }}\r\n          title={name}\r\n        >\r\n          {name}\r\n        </div>\r\n        {title && (\r\n          <div\r\n            style={{\r\n              ...designTokens.typography.body1,\r\n              color: isManager\r\n                ? designTokens.colors.neutralForegroundInvertedRest\r\n                : designTokens.colors.neutralForeground1Rest,\r\n              whiteSpace: 'nowrap',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              transition: 'color 0.3s ease',\r\n              width: '100%',\r\n            }}\r\n            title={title}\r\n          >\r\n            {title}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}