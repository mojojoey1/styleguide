{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopitt\\\\Documents\\\\code\\\\figmaTest2\\\\src\\\\components\\\\Button.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useColors } from '../theme/useColors';\nimport { designTokens } from '../theme/designTokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  variant = 'primary',\n  isSelected = false,\n  children,\n  ...props\n}) => {\n  _s();\n  const colors = useColors();\n  const [isHovered, setIsHovered] = React.useState(false);\n  const [isPressed, setIsPressed] = React.useState(false);\n  const [isFocused, setIsFocused] = React.useState(false);\n  const getBackgroundColor = () => {\n    if (props.disabled) {\n      return colors.neutral.background.disabled;\n    }\n    const state = isPressed ? 'pressed' : isHovered ? 'hover' : isSelected ? 'selected' : 'rest';\n    return colors.brand.background[state];\n  };\n  const getForegroundColor = () => {\n    if (props.disabled) {\n      return colors.neutral.foreground.disabled;\n    }\n    const state = isPressed ? 'pressed' : isHovered ? 'hover' : isSelected ? 'selected' : 'rest';\n    return variant === 'primary' ? colors.neutral.foreground.onBrand : colors.brand.foreground[state];\n  };\n  const getBorderColor = () => {\n    if (props.disabled) {\n      return colors.neutral.stroke.disabled;\n    }\n    const state = isPressed ? 'pressed' : isHovered ? 'hover' : isSelected ? 'selected' : 'rest';\n    return colors.brand.stroke[state];\n  };\n  const getFocusStyles = () => {\n    if (!isFocused) return {};\n    return {\n      outline: 'none',\n      boxShadow: `0 0 0 2px ${colors.neutral.stroke.focus[1]}, 0 0 0 4px ${colors.neutral.stroke.focus[2]}`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ...props,\n    style: {\n      padding: `${designTokens.spacing.vertical.s} ${designTokens.spacing.horizontal.m}`,\n      backgroundColor: getBackgroundColor(),\n      color: getForegroundColor(),\n      border: variant === 'subtle' ? 'none' : `1px solid ${getBorderColor()}`,\n      borderRadius: designTokens.borderRadius.medium,\n      cursor: props.disabled ? 'not-allowed' : 'pointer',\n      ...designTokens.typography.body1.regular,\n      transition: 'all 0.2s ease',\n      margin: `0 ${designTokens.spacing.horizontal.xs}`,\n      ...getFocusStyles(),\n      ...props.style\n    },\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => {\n      setIsHovered(false);\n      setIsPressed(false);\n    },\n    onMouseDown: () => setIsPressed(true),\n    onMouseUp: () => setIsPressed(false),\n    onFocus: () => setIsFocused(true),\n    onBlur: () => {\n      setIsFocused(false);\n      setIsHovered(false);\n      setIsPressed(false);\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Button, \"L9U+KOkWw9yqbK18Vy758GV2ruc=\", false, function () {\n  return [useColors];\n});\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useColors","designTokens","jsxDEV","_jsxDEV","Button","variant","isSelected","children","props","_s","colors","isHovered","setIsHovered","useState","isPressed","setIsPressed","isFocused","setIsFocused","getBackgroundColor","disabled","neutral","background","state","brand","getForegroundColor","foreground","onBrand","getBorderColor","stroke","getFocusStyles","outline","boxShadow","focus","style","padding","spacing","vertical","s","horizontal","m","backgroundColor","color","border","borderRadius","medium","cursor","typography","body1","regular","transition","margin","xs","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jopitt/Documents/code/figmaTest2/src/components/Button.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useColors } from '../theme/useColors';\r\nimport { designTokens } from '../theme/designTokens';\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'subtle';\r\n  isSelected?: boolean;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  variant = 'primary',\r\n  isSelected = false,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const colors = useColors();\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const [isPressed, setIsPressed] = React.useState(false);\r\n  const [isFocused, setIsFocused] = React.useState(false);\r\n\r\n  const getBackgroundColor = () => {\r\n    if (props.disabled) {\r\n      return colors.neutral.background.disabled;\r\n    }\r\n\r\n    const state = isPressed ? 'pressed' : isHovered ? 'hover' : isSelected ? 'selected' : 'rest';\r\n    return colors.brand.background[state];\r\n  };\r\n\r\n  const getForegroundColor = () => {\r\n    if (props.disabled) {\r\n      return colors.neutral.foreground.disabled;\r\n    }\r\n\r\n    const state = isPressed ? 'pressed' : isHovered ? 'hover' : isSelected ? 'selected' : 'rest';\r\n    return variant === 'primary' ? colors.neutral.foreground.onBrand : colors.brand.foreground[state];\r\n  };\r\n\r\n  const getBorderColor = () => {\r\n    if (props.disabled) {\r\n      return colors.neutral.stroke.disabled;\r\n    }\r\n\r\n    const state = isPressed ? 'pressed' : isHovered ? 'hover' : isSelected ? 'selected' : 'rest';\r\n    return colors.brand.stroke[state];\r\n  };\r\n\r\n  const getFocusStyles = () => {\r\n    if (!isFocused) return {};\r\n\r\n    return {\r\n      outline: 'none',\r\n      boxShadow: `0 0 0 2px ${colors.neutral.stroke.focus[1]}, 0 0 0 4px ${colors.neutral.stroke.focus[2]}`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      style={{\r\n        padding: `${designTokens.spacing.vertical.s} ${designTokens.spacing.horizontal.m}`,\r\n        backgroundColor: getBackgroundColor(),\r\n        color: getForegroundColor(),\r\n        border: variant === 'subtle' ? 'none' : `1px solid ${getBorderColor()}`,\r\n        borderRadius: designTokens.borderRadius.medium,\r\n        cursor: props.disabled ? 'not-allowed' : 'pointer',\r\n        ...designTokens.typography.body1.regular,\r\n        transition: 'all 0.2s ease',\r\n        margin: `0 ${designTokens.spacing.horizontal.xs}`,\r\n        ...getFocusStyles(),\r\n        ...props.style,\r\n      }}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => {\r\n        setIsHovered(false);\r\n        setIsPressed(false);\r\n      }}\r\n      onMouseDown={() => setIsPressed(true)}\r\n      onMouseUp={() => setIsPressed(false)}\r\n      onFocus={() => setIsFocused(true)}\r\n      onBlur={() => {\r\n        setIsFocused(false);\r\n        setIsHovered(false);\r\n        setIsPressed(false);\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}