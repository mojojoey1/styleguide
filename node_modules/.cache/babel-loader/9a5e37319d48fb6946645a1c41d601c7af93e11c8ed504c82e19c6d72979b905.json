{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopitt\\\\Documents\\\\code\\\\figmaTest2\\\\src\\\\components\\\\Button.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { getDesignTokens } from '../theme/tokens';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  variant = 'secondary',\n  size = 'medium',\n  layout = 'text-only',\n  icon,\n  isDisabled = false,\n  isDarkMode = false,\n  children,\n  className = '',\n  ...props\n}) => {\n  _s();\n  const [isHovered, setIsHovered] = React.useState(false);\n  const [isPressed, setIsPressed] = React.useState(false);\n  const designTokens = getDesignTokens(isDarkMode);\n  const getButtonStyles = () => {\n    const buttonTokens = designTokens.colors.button[variant];\n    let state = 'rest';\n    if (isDisabled) state = 'disabled';else if (isPressed) state = 'pressed';else if (isHovered) state = 'hover';\n    const styles = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '8px',\n      borderRadius: '4px',\n      border: '1px solid',\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\n      transition: 'all 0.2s ease-in-out',\n      fontFamily: 'Segoe UI, sans-serif',\n      fontWeight: 600,\n      backgroundColor: buttonTokens.background[state],\n      color: buttonTokens.foreground[state],\n      borderColor: variant === 'subtle' ? 'transparent' : buttonTokens.border[state]\n    };\n\n    // Size-specific styles\n    switch (size) {\n      case 'small':\n        styles.padding = '4px 8px';\n        styles.fontSize = '12px';\n        styles.lineHeight = '16px';\n        break;\n      case 'large':\n        styles.padding = '8px 16px';\n        styles.fontSize = '16px';\n        styles.lineHeight = '24px';\n        break;\n      default:\n        // medium\n        styles.padding = '6px 12px';\n        styles.fontSize = '14px';\n        styles.lineHeight = '20px';\n    }\n    return styles;\n  };\n  const renderContent = () => {\n    switch (layout) {\n      case 'icon-before':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [icon, children]\n        }, void 0, true);\n      case 'icon-after':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [children, icon]\n        }, void 0, true);\n      case 'icon-only':\n        return icon;\n      default:\n        return children;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ...props,\n    disabled: isDisabled,\n    style: getButtonStyles(),\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => {\n      setIsHovered(false);\n      setIsPressed(false);\n    },\n    onMouseDown: () => setIsPressed(true),\n    onMouseUp: () => setIsPressed(false),\n    className: className,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Button, \"DQPbKel4aua5pv3cuXQ31jj7ktI=\");\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","getDesignTokens","Fragment","_Fragment","jsxDEV","_jsxDEV","Button","variant","size","layout","icon","isDisabled","isDarkMode","children","className","props","_s","isHovered","setIsHovered","useState","isPressed","setIsPressed","designTokens","getButtonStyles","buttonTokens","colors","button","state","styles","display","alignItems","justifyContent","gap","borderRadius","border","cursor","transition","fontFamily","fontWeight","backgroundColor","background","color","foreground","borderColor","padding","fontSize","lineHeight","renderContent","disabled","style","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jopitt/Documents/code/figmaTest2/src/components/Button.tsx"],"sourcesContent":["import React from 'react';\r\nimport { getDesignTokens } from '../theme/tokens';\r\n\r\nexport type ButtonSize = 'small' | 'medium' | 'large';\r\nexport type ButtonVariant = 'primary' | 'secondary' | 'subtle';\r\nexport type ButtonLayout = 'text-only' | 'icon-before' | 'icon-after' | 'icon-only';\r\nexport type ButtonState = 'rest' | 'hover' | 'pressed' | 'disabled';\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  layout?: ButtonLayout;\r\n  icon?: React.ReactNode;\r\n  isDisabled?: boolean;\r\n  isDarkMode?: boolean;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  variant = 'secondary',\r\n  size = 'medium',\r\n  layout = 'text-only',\r\n  icon,\r\n  isDisabled = false,\r\n  isDarkMode = false,\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const [isPressed, setIsPressed] = React.useState(false);\r\n  const designTokens = getDesignTokens(isDarkMode);\r\n\r\n  const getButtonStyles = () => {\r\n    const buttonTokens = designTokens.colors.button[variant];\r\n    let state: ButtonState = 'rest';\r\n    if (isDisabled) state = 'disabled';\r\n    else if (isPressed) state = 'pressed';\r\n    else if (isHovered) state = 'hover';\r\n\r\n    const styles: React.CSSProperties = {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      gap: '8px',\r\n      borderRadius: '4px',\r\n      border: '1px solid',\r\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\r\n      transition: 'all 0.2s ease-in-out',\r\n      fontFamily: 'Segoe UI, sans-serif',\r\n      fontWeight: 600,\r\n      backgroundColor: buttonTokens.background[state],\r\n      color: buttonTokens.foreground[state],\r\n      borderColor: variant === 'subtle' ? 'transparent' : (buttonTokens as typeof designTokens.colors.button.primary | typeof designTokens.colors.button.secondary).border[state],\r\n    };\r\n\r\n    // Size-specific styles\r\n    switch (size) {\r\n      case 'small':\r\n        styles.padding = '4px 8px';\r\n        styles.fontSize = '12px';\r\n        styles.lineHeight = '16px';\r\n        break;\r\n      case 'large':\r\n        styles.padding = '8px 16px';\r\n        styles.fontSize = '16px';\r\n        styles.lineHeight = '24px';\r\n        break;\r\n      default: // medium\r\n        styles.padding = '6px 12px';\r\n        styles.fontSize = '14px';\r\n        styles.lineHeight = '20px';\r\n    }\r\n\r\n    return styles;\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (layout) {\r\n      case 'icon-before':\r\n        return (\r\n          <>\r\n            {icon}\r\n            {children}\r\n          </>\r\n        );\r\n      case 'icon-after':\r\n        return (\r\n          <>\r\n            {children}\r\n            {icon}\r\n          </>\r\n        );\r\n      case 'icon-only':\r\n        return icon;\r\n      default:\r\n        return children;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      disabled={isDisabled}\r\n      style={getButtonStyles()}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => {\r\n        setIsHovered(false);\r\n        setIsPressed(false);\r\n      }}\r\n      onMouseDown={() => setIsPressed(true)}\r\n      onMouseUp={() => setIsPressed(false)}\r\n      className={className}\r\n    >\r\n      {renderContent()}\r\n    </button>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}