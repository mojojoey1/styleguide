{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopitt\\\\Documents\\\\code\\\\figmaTest2\\\\src\\\\theme\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { tokens } from './tokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(tokens);\nexport const ThemeProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: tokens,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Hook to get theme-specific colors\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const useThemeColors = () => {\n  _s2();\n  const {\n    theme\n  } = useTheme();\n  return {\n    theme\n  };\n};\n_s2(useThemeColors, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","tokens","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s","context","undefined","Error","useThemeColors","_s2","theme","$RefreshReg$"],"sources":["C:/Users/jopitt/Documents/code/figmaTest2/src/theme/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport { tokens } from './tokens';\r\nimport { DefenderDesignTokens } from './types';\r\n\r\nconst ThemeContext = createContext<DefenderDesignTokens>(tokens);\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  return (\r\n    <ThemeContext.Provider value={tokens}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Hook to get theme-specific colors\r\nexport const useThemeColors = () => {\r\n  const { theme } = useTheme();\r\n  return { theme };\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,YAAY,gBAAGL,aAAa,CAAuBE,MAAM,CAAC;AAEhE,OAAO,MAAMI,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACtF,oBACEH,OAAA,CAACC,YAAY,CAACG,QAAQ;IAACC,KAAK,EAAEP,MAAO;IAAAK,QAAA,EAClCA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACC,EAAA,GANWR,aAAsD;AAQnE,OAAO,MAAMS,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGhB,UAAU,CAACI,YAAY,CAAC;EACxC,IAAIY,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOF,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,QAAQ;AASrB,OAAO,MAAMK,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAM;IAAEC;EAAM,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC5B,OAAO;IAAEO;EAAM,CAAC;AAClB,CAAC;AAACD,GAAA,CAHWD,cAAc;EAAA,QACPL,QAAQ;AAAA;AAAA,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}