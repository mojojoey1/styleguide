{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopitt\\\\Documents\\\\code\\\\figmaTest2\\\\src\\\\OrgChart.tsx\";\nimport React from 'react';\nimport { AvatarCard } from './components/AvatarCard';\nimport { getDesignTokens } from './tokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrgChart = ({\n  organization,\n  isDarkMode = false\n}) => {\n  const designTokens = getDesignTokens(isDarkMode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: designTokens.spacing.l,\n      backgroundColor: isDarkMode ? designTokens.colors.neutralBackground1Rest : designTokens.colors.neutralBackground3Rest\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${organization.teams.length}, 1fr)`,\n        gap: designTokens.spacing.l,\n        width: '100%',\n        maxWidth: '1200px',\n        margin: '0 auto'\n      },\n      children: organization.teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: designTokens.spacing.m\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            ...designTokens.typography.title1,\n            color: designTokens.colors.neutralForeground1Rest,\n            textAlign: 'center',\n            margin: 0\n          },\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(AvatarCard, {\n          name: team.manager.name,\n          title: team.manager.title,\n          imageUrl: team.manager.imageUrl,\n          role: \"Manager\",\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: designTokens.spacing.s\n          },\n          children: team.members.map((member, memberIndex) => /*#__PURE__*/_jsxDEV(AvatarCard, {\n            name: member.name,\n            title: member.title,\n            imageUrl: member.imageUrl,\n            role: \"IC\",\n            isDarkMode: isDarkMode\n          }, memberIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = OrgChart;\nvar _c;\n$RefreshReg$(_c, \"OrgChart\");","map":{"version":3,"names":["React","AvatarCard","getDesignTokens","jsxDEV","_jsxDEV","OrgChart","organization","isDarkMode","designTokens","style","padding","spacing","l","backgroundColor","colors","neutralBackground1Rest","neutralBackground3Rest","children","display","gridTemplateColumns","teams","length","gap","width","maxWidth","margin","map","team","index","flexDirection","m","typography","title1","color","neutralForeground1Rest","textAlign","name","fileName","_jsxFileName","lineNumber","columnNumber","manager","title","imageUrl","role","s","members","member","memberIndex","_c","$RefreshReg$"],"sources":["C:/Users/jopitt/Documents/code/figmaTest2/src/OrgChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Organization, Team, TeamMember } from './types';\r\nimport { AvatarCard } from './components/AvatarCard';\r\nimport { getDesignTokens } from './tokens';\r\n\r\ninterface OrgChartProps {\r\n    organization: Organization;\r\n    isDarkMode?: boolean;\r\n}\r\n\r\nexport const OrgChart: React.FC<OrgChartProps> = ({ organization, isDarkMode = false }) => {\r\n    const designTokens = getDesignTokens(isDarkMode);\r\n\r\n    return (\r\n        <div style={{\r\n            padding: designTokens.spacing.l,\r\n            backgroundColor: isDarkMode ? designTokens.colors.neutralBackground1Rest : designTokens.colors.neutralBackground3Rest,\r\n        }}>\r\n            <div style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: `repeat(${organization.teams.length}, 1fr)`,\r\n                gap: designTokens.spacing.l,\r\n                width: '100%',\r\n                maxWidth: '1200px',\r\n                margin: '0 auto',\r\n            }}>\r\n                {organization.teams.map((team, index) => (\r\n                    <div key={index} style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        gap: designTokens.spacing.m,\r\n                    }}>\r\n                        <h2 style={{\r\n                            ...designTokens.typography.title1,\r\n                            color: designTokens.colors.neutralForeground1Rest,\r\n                            textAlign: 'center',\r\n                            margin: 0,\r\n                        }}>\r\n                            {team.name}\r\n                        </h2>\r\n                        \r\n                        {/* Manager Card */}\r\n                        <AvatarCard\r\n                            name={team.manager.name}\r\n                            title={team.manager.title}\r\n                            imageUrl={team.manager.imageUrl}\r\n                            role=\"Manager\"\r\n                            isDarkMode={isDarkMode}\r\n                        />\r\n\r\n                        {/* Team Members */}\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: designTokens.spacing.s,\r\n                        }}>\r\n                            {team.members.map((member, memberIndex) => (\r\n                                <AvatarCard\r\n                                    key={memberIndex}\r\n                                    name={member.name}\r\n                                    title={member.title}\r\n                                    imageUrl={member.imageUrl}\r\n                                    role=\"IC\"\r\n                                    isDarkMode={isDarkMode}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}